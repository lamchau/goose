# toml representation of lychee cli args
# lychee --base './site'  --verbose --glob-ignore-case --format=detailed --no-progress './docs' './site'
#############################  Display  #############################
# Verbose program output
# Accepts log level: "error", "warn", "info", "debug", "trace"
verbose = "trace"

# Don't show interactive progress bar while checking links.
no_progress = true

# TODO: add support for these once the documentation is updated
#
# While the parser does validate these via --options the CLI, they currently
# don't seem to have an effect if defined in the config file. So for now we
# need to pass these in manually until support is added.
#  - https://lychee.cli.rs/usage/config/
#  - https://github.com/lycheeverse/lychee/blob/946d15f7fad6df600ee4fecd8e01ca782f2d1233/lychee-bin/src/formatters/stats/mod.rs#L7-L11A
# format = "Json"
# mode = "plain"
# END TODO ---------------------------------------------------------------------

# Path to summary output file.
# output = ".config.dummy.report.json"

#############################  Cache  ###############################

# Helpful to avoid checking the same links on multiple runs.
# cache = true

# Discard all cached requests older than this duration.
# Note: We set this to < 24 hours so that we can use the cache resullts in the
# case of multiple runs but short enough to expire the cache before the next run.
# This is defined in ./github/workflows/check-links.yml (currently set to every weekday at midnight UTC).
#
# n.b. GitHub actions `cron` isn't always accurate and delays can vary wildly.
max_cache_age = "12h"

#############################  Runtime  #############################

# Number of threads to utilize.
# Defaults to number of cores available to the system if omitted.
# threads = 2

# Maximum number of allowed redirects.
max_redirects = 10

# Maximum number of allowed retries before a link is declared dead.
max_retries = 2

# Maximum number of concurrent link checks.
max_concurrency = 14

#############################  Requests  ############################

# User agent to send with each request.
user_agent = "curl/8.7.1 (x86_64-apple-darwin20.3.0) lychee/0.16.1"

# Website timeout from connect to response finished.
timeout = 30

# Minimum wait time in seconds between retries of failed requests.
retry_wait_time = 2

# Comma-separated list of accepted status codes for valid links.
# Supported values are:
#
# accept = ["200..=204", "429"]
# accept = "200..=204, 429"
# accept = ["200", "429"]
# accept = "200, 429"
accept = ["200", "429"]

# Proceed for server connections considered insecure (invalid TLS).
insecure = false

# Only test links with the given schemes (e.g. https).
# Omit to check links with any other scheme.
# At the moment, we support http, https, file, and mailto.
# scheme = ["https"]

# When links are available using HTTPS, treat HTTP links as errors.
require_https = false

# Request method
method = "get"

# Custom request headers
# headers = []

# Remap URI matching pattern to different URI.
# remap = ["https://example.com http://example.invalid"]

# Base URL or website root directory to check relative URLs.
base = "./site"

# HTTP basic auth support. This will be the username and password passed to the
# authorization HTTP header. See
# <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization>
# basic_auth = ["example.com user:pwd"]

#############################  Exclusions  ##########################

# Skip missing input files (default is to error if they don't exist).
skip_missing = false

# Check links inside `<code>` and `<pre>` blocks as well as Markdown code
# blocks.
include_verbatim = true

# Ignore case of paths when matching glob patterns.
glob_ignore_case = true

# Exclude URLs and mail addresses from checking (supports regex).
# exclude = ['^https://www\.linkedin\.com', '^https://web\.archive\.org/web/']

# Exclude these filesystem paths from getting checked.
# exclude_path = ["file/path/to/Ignore", "./other/file/path/to/Ignore"]

# URLs to check (supports regex). Has preference over all excludes.
#
# Note: If we must use this, we must be exhaustive in our URLs otherwise it'll
# skip them, so for simplicity we check all URLs instead of having a overly
# relaxed regex (e,g. `['.']`).
# include = ['gist\.github\.com.*']

# Exclude all private IPs from checking.
# Equivalent to setting `exclude_private`, `exclude_link_local`, and
# `exclude_loopback` to true.
# exclude_all_private = false

# Exclude private IP address ranges from checking.
# exclude_private = false

# Exclude link-local IP address range from checking.
# exclude_link_local = false

# Exclude loopback IP address range and localhost from checking.
# exclude_loopback = false

# Check mail addresses
include_mail = true
